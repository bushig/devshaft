# Generated by Django 2.0.9 on 2018-11-11 01:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import image_cropping.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('languages', '0001_initial'),
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
                ('description', models.TextField(max_length=10000)),
                ('is_2d', models.BooleanField()),
                ('is_3d', models.BooleanField()),
                ('site', models.URLField(blank=True)),
                ('repository_url', models.URLField(blank=True)),
                ('youtube', models.URLField(blank=True, max_length=300, null=True)),
                ('is_free', models.BooleanField(default=False)),
                ('is_royalty_free', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('repo_stars', models.IntegerField(blank=True, null=True, verbose_name='Stars')),
                ('repo_forks', models.IntegerField(blank=True, null=True, verbose_name='Repo forks')),
                ('repo_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Repo description')),
                ('repo_updated', models.DateTimeField(blank=True, null=True)),
                ('last_commit', models.DateTimeField(blank=True, null=True)),
                ('commits', models.CharField(blank=True, max_length=500, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('version', models.CharField(blank=True, max_length=20)),
                ('version_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'frameworks',
                'ordering': ('version_date',),
            },
        ),
        migrations.CreateModel(
            name='FrameworkImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', image_cropping.fields.ImageCropField(blank=True, upload_to='uploaded_images')),
                ('cropping', image_cropping.fields.ImageRatioField('image', '300x300', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='cropping')),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frameworks.Framework')),
            ],
            options={
                'ordering': ['order', 'date_add'],
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='framework',
            name='editor_platforms',
            field=models.ManyToManyField(related_name='editor_platforms', to='frameworks.Platform'),
        ),
        migrations.AddField(
            model_name='framework',
            name='languages',
            field=models.ManyToManyField(to='languages.Language'),
        ),
        migrations.AddField(
            model_name='framework',
            name='license',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.License'),
        ),
        migrations.AddField(
            model_name='framework',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='frameworks_liked', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='framework',
            name='target_platforms',
            field=models.ManyToManyField(related_name='target_platforms', to='frameworks.Platform'),
        ),
        migrations.AddField(
            model_name='framework',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
